"use client";
import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { motion } from "framer-motion";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from "recharts";

const initialCapital = 1000;
const stockData = [
  { name: "Día 1", value: 100 },
  { name: "Día 2", value: 120 },
  { name: "Día 3", value: 90 },
  { name: "Día 4", value: 130 },
  { name: "Día 5", value: 110 },
];

export default function InvestmentGame() {
  const [capital, setCapital] = useState(initialCapital);
  const [day, setDay] = useState(0);
  const [stocks, setStocks] = useState(0);
  const [message, setMessage] = useState("Bienvenido al juego de inversión en bolsa. ¡Aprende a invertir sabiamente!");

  const buyStock = () => {
    if (capital >= stockData[day].value) {
      setStocks(stocks + 1);
      setCapital(capital - stockData[day].value);
      setMessage("Has comprado una acción. ¡Observa cómo cambia el mercado!");
    } else {
      setMessage("No tienes suficiente capital para comprar esta acción.");
    }
  };

  const sellStock = () => {
    if (stocks > 0) {
      setCapital(capital + stockData[day].value);
      setStocks(stocks - 1);
      setMessage("Has vendido una acción. ¿Tomaste la decisión correcta?");
    } else {
      setMessage("No tienes acciones para vender.");
    }
  };

  const nextDay = () => {
    if (day < stockData.length - 1) {
      setDay(day + 1);
      setMessage("Nuevo día en el mercado. ¡Observa cómo cambian los precios!");
    }
  };

  return (
    <div className="flex flex-col items-center p-4">
      <h1 className="text-xl font-bold">Juego de Inversión en Bolsa</h1>
      <p className="mt-2 text-sm text-gray-600">{message}</p>
      <Card className="w-full max-w-md mt-4">
        <CardContent>
          <p>Capital: ${capital}</p>
          <p>Acciones compradas: {stocks}</p>
          <p>Precio de la acción hoy: ${stockData[day]?.value}</p>
          <Progress value={(day / (stockData.length - 1)) * 100} className="mt-2" />
        </CardContent>
      </Card>
      <ResponsiveContainer width="100%" height={200} className="mt-4">
        <LineChart data={stockData}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip />
          <Line type="monotone" dataKey="value" stroke="#8884d8" />
        </LineChart>
      </ResponsiveContainer>
      <motion.div className="flex gap-2 mt-4">
        <Button onClick={buyStock} disabled={capital < stockData[day]?.value}>
          Comprar
        </Button>
        <Button onClick={sellStock} disabled={stocks === 0}>
          Vender
        </Button>
        <Button onClick={nextDay} disabled={day === stockData.length - 1}>
          Siguiente Día
        </Button>
      </motion.div>
    </div>
  );
}
